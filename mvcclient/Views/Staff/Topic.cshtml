@model IEnumerable<mvcclient.Models.Topic>

@{
    ViewData["Title"] = "Topic";
}

@*<h1>Topic</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.TopicId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TopicName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TopicDesc)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MaterialPath)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.VideoPath)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CourseId)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TopicId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TopicName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TopicDesc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaterialPath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VideoPath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseId)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
    }
        </tbody>
    </table>*@
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <style>
        /* * {
            box-sizing: border-box
        }*/

        /* Style the tab */
        .tab {
            float: left;
            /* border: 1px solid #ccc;*/
            background-color: #c2f0c2;
            width: 30%;
            height: 300px;
        }

            /* Style the buttons that are used to open the tab content */
            .tab button {
                display: block;
                background-color: inherit;
                color: black;
                padding: 22px 16px;
                width: 100%;
                border: none;
                outline: none;
                text-align: left;
                cursor: pointer;
                transition: 0.3s;
            }

                /* Change background color of buttons on hover */
                .tab button:hover {
                    background-color: #99e699;
                }

                /* Create an active/current "tab button" class */
                .tab button.active {
                    background-color: #70db70;
                }

        /* Style the tab content */
        .tabcontent {
            float: left;
            padding: 0px 12px;
            /* border: 1px solid #ccc;*/
            width: 70%;
            border-left: none;
            height: 300px;
        }
    </style>
    <script>
    function openCity(evt, cityName) {
            // Declare all variables
            var i, tabcontent, tablinks;

            // Get all elements with class="tabcontent" and hide them
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Get all elements with class="tablinks" and remove the class "active"
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }

            // Show the current tab, and add an "active" class to the link that opened the tab
            document.getElementById(cityName).style.display = "block";
            evt.currentTarget.className += " active";
        }</script>
</head>
@*<h1>@ViewBag.Data</h1>*@

<div class="tab">
    @foreach (var item in Model)
    {

        <button class="tablinks" onclick="openCity(event, '@item.TopicName')">@Html.DisplayFor(modelItem => item.TopicName)</button>}
</div>
@foreach (var item in Model)
{
<div id="@item.TopicName" class="tabcontent">
    <h3>@item.TopicName</h3>
    <p>London is the capital city of England.</p>
    <video width="750" height="500" controls>
        <source src=@Url.Content(item.VideoPath) type="video/mp4">
        <source src="movie.ogg" type="video/ogg">
        Your browser does not support the video tag.
    </video>
    <a href=@Url.Content(item.MaterialPath) target="_new">Notes</a>
</div>
}
